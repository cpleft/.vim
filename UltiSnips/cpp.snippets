extends c

snippet class "class .. (class)"
class ${1:`!p snip.rv = snip.basename or "name"`}
{
public:
	${1/(\w+).*/$1/} (${2:arguments});
	virtual ~${1/(\w+).*/$1/} ();

private:
	${0:/* data */}
};
endsnippet

snippet namespace "namespace .. (namespace)"
namespace${1/.+/ /m}${1:`!p snip.rv = snip.basename or "name"`}
{
	${VISUAL}$0
}${1/.+/ \/* /m}$1${1/.+/ *\/ /m}
endsnippet

snippet template "template <typename ..> (template)"
template <typename ${1:_InputIter}>
endsnippet

snippet cpp
#include <iostream>
#include <cstring>
using namespace std;

int main()
{
    ${1:}

    return 0;
}$0
endsnippet
